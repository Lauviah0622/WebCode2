// basic-styling
@import 'component/styling/normalize';
@import 'component/styling/color';
@import 'component/styling/basic';
@import 'component/styling/layout';

// general-component
@import "component/footer";
@import "component/header";

// hover-effect
@import "component/styling/hover";


// purpose-component
@import "component/project-banner";
@import "component/page-title";
@import "component/work-cates-list";
@import "component/work-gallery-item";



.works {
    .container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-auto-rows: 1fr;
        margin: 5px -5px 5rem 5px;
        gap: 5px;
        @include media-L {
            grid-template-rows: repeat(4, calc(70vw / 3));
        }

        @include media-M {
            grid-template-rows: repeat(4, calc(33vw - 33px));
        }

        @include media-XL {
            grid-template-rows: repeat(4, calc(800px / 3));
        }

        &::before {
            content: '';
            width: 0;
            padding-bottom: 100%;
            grid-row: 1 / 1;
            grid-column: 1 / 1;
        }

        &>*:first-child {
            grid-row: 1 / 1;
            grid-column: 1 / 1;
        }
    }

    .item {
        position: relative;
        margin: 0;
        // background-color: rgb(226, 114, 114);

        @mixin item-block($order, $gStart, $gEnd) {
            &:nth-child(6n + #{$order}) {
                grid-column-start: $gStart;
                grid-column-end: $gEnd;
                
            }
        }
        
        @include item-block(1, 1, 3);
        @include item-block(2, 3, 4);
        @include item-block(3, 4, 5);
        @include item-block(4, 1, 2);
        @include item-block(5, 2, 3);
        @include item-block(6, 3, 5);

    }

    .work__item {
        @include work-gallery-item;

    }

    h1 {
        display: inline-block;
    }

    @include media-S {
        .container {
            display: flex;
            flex-wrap: wrap;
            &::before {
                display: none;
            }

            margin: 0;
        }        
        
    }


}